version: "3.8"
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: buyandsell
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 456
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "wal_level=logical" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.4
    command: start-dev
    restart: unless-stopped
    depends_on:
      - postgres
    links:
      - postgres
    ports:
      - "9081:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin@1234
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/buyandsell
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: 456
      KC_DB_NAME: buyandsell
      KC_FEATURES: token-exchange,admin-fine-grained-authz
      KC_HOSTNAME: localhost
    volumes:
      - ./extensions:/opt/keycloak/providers/
  elasticsearch:
    image: elasticsearch:7.12.1
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 1g
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - network.host=127.0.0.1
      - http.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
  redis:
    image: redis:alpine3.14
    command: redis-server --requirepass redis
    ports:
      - "6379:6379"
  pgsync:
    image: pgsync:latest
    build:
      context: ./pgsync
      dockerfile: Dockerfile
    sysctls:
      - net.ipv4.tcp_keepalive_time=200
      - net.ipv4.tcp_keepalive_intvl=200
      - net.ipv4.tcp_keepalive_probes=5
    links:
      - postgres
      - elasticsearch
      - redis
    environment:
      PG_HOST: postgres
      POSTGRES_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: 456
      LOG_LEVEL: INFO
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_SCHEME: http
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_AUTH: redis
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch