version: "3.8"
services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=buyandsell
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=456
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
    volumes:
      - postgresvolume:/var/lib/postgresql/data
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticvolume:/usr/share/elasticsearch/data
  logstash:
    container_name: logstash
    build:
      context: ./logstash/
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    environment:
      - CONFIG_SUPPORT_ESCAPE=true
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
      - postgres
    volumes:
      - logstashvolume:/usr/share/logstash/data
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.4
    command: start-dev
    restart: unless-stopped
    depends_on:
      - postgres
    links:
      - postgres
    ports:
      - "9081:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin@1234
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/buyandsell
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: 456
      KC_DB_NAME: buyandsell
      KC_FEATURES: token-exchange,admin-fine-grained-authz
      KC_HOSTNAME: localhost
    volumes:
      - ./extensions:/opt/keycloak/providers/

volumes:
  postgresvolume:
  elasticvolume:
  logstashvolume: